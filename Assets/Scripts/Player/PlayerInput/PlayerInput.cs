//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerInput/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3fa592be-eaea-4494-9b3f-be1cbbbc0977"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""c6667191-1a8f-4c53-a628-ec234232cf2b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""5359760c-5e78-451f-8d17-2f9ca621cd81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""f152ae53-6315-477a-9ef8-96fab398fb9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AllowCameraMovement"",
                    ""type"": ""Button"",
                    ""id"": ""23522d48-a04c-41a6-afaa-538aa046501a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DisplayRecipesBook"",
                    ""type"": ""Button"",
                    ""id"": ""f96b00fe-e89d-4810-ba76-42eaab2f76fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a114bd0e-247e-45b2-b638-fa752fb40b8c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""6bd2746a-2c76-4394-b4d3-924e83c10eca"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4bb6b74b-347b-4128-99e9-be8f9124e2dd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""63e7bf3e-4510-4188-b037-99f50498c68f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""219b9d6f-d681-4800-95b3-add5eef06254"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dc69ffc8-a657-406a-8e06-3a23acb99cca"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""7dfb4f3a-1019-4c8b-9a93-ddc869bf08e5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""54beb43f-d3c9-43d1-8f45-332888248a9f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a9d9e432-e438-446d-bf44-0dcea52c6383"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b3cc2781-dcfe-422b-ac61-965290b7e854"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f604800-6da5-40f7-84a4-cddd409c7bb7"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c32a7f67-5144-4d40-836d-d2571518803f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b24343-039d-48e5-88e3-d98e0f3513e0"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e669ec6-ecd9-49f9-a1e6-2b34962ebbe8"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dda58ad9-16d4-4cb4-b11f-b60549acbc06"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""951f21f4-8aec-4960-889a-966394dcc135"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4534a6a-fa9a-4edd-8cd8-da4789ee1cf8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AllowCameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f20c6b3d-93c2-410c-8608-4aee64118af6"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DisplayRecipesBook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cce37324-3a82-4f1d-bc19-799d771899c5"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""DisplayRecipesBook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Pause"",
            ""id"": ""6a5a6ca7-3bde-4ff0-b850-4c87fb908a62"",
            ""actions"": [
                {
                    ""name"": ""Unpause"",
                    ""type"": ""Button"",
                    ""id"": ""4ddab65e-39f3-4f46-ab4b-784079efd230"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a0c24241-fb5e-4d1e-af4b-a855f76f7154"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b759dc79-d7e2-4877-b83a-3858c2522dd9"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Building"",
            ""id"": ""6ad8660a-8a33-4654-8768-79f81f54fef0"",
            ""actions"": [
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""0fd5dead-5c97-4c9a-8f24-fa0dd33c2726"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""545e6474-0a19-4ac5-8872-205174cf5ae4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""c7cbfd53-a637-4a4c-9895-0243cd39799c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""f090832e-fc7f-4a0d-8f33-9140324183d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DisplayFurnitureStore"",
                    ""type"": ""Button"",
                    ""id"": ""8aed8851-58d5-40bb-a9b4-b8b119406519"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sell"",
                    ""type"": ""Button"",
                    ""id"": ""2f9e5945-3869-4b61-8b79-3514761d7b96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnablePreview"",
                    ""type"": ""Button"",
                    ""id"": ""dc6397c9-46cb-4c83-8d55-017004fb26de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3e5ad963-e47a-4531-9862-72d0d36f62a0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""815bbc43-8366-432e-8dbd-eabfb08ec537"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d74113b5-f6be-46fc-a77a-0454f9d97d43"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab2823d9-8049-479f-8932-8a8413c95784"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df2f8a6e-636d-415c-a644-1bad3c605c74"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fd6b644-32b0-4b5b-9ebe-57933a9fd0d7"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56368b20-0269-4a54-aafc-be1a6aec8a43"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RotateObjects"",
                    ""id"": ""b2e5c4eb-17f2-4af4-9e66-ed19c8add108"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5fdefbf1-93e1-403b-b8dc-e2593e4e2b2d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7784f02b-f0dc-4aa0-97af-64eaff0566b6"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""33bf7787-169a-45f9-838c-99065643b4e5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DisplayFurnitureStore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1b37f61-8cb6-4212-b922-5c2e830883cc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""DisplayFurnitureStore"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1cda452-ca2c-41fe-9003-e3d60a7ebcdb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9600311e-cf8b-46f0-ae08-afc23d0e44c4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Sell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c820a11-c504-424a-86b5-ec579444dfc4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnablePreview"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7153df7-0b5e-436a-9b44-87212b4e4568"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""EnablePreview"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""1553c491-aa6d-41e7-8596-6d42e2fbbc4a"",
            ""actions"": [
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""7dee7be6-6520-40b5-a9d7-60cfda8b4838"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKeyPressed"",
                    ""type"": ""Button"",
                    ""id"": ""6c2b4dad-7333-42f3-bf26-3c997d72564c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2f17e2ae-6fa7-4e02-9440-ba27fefca681"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""9d45e159-b7f3-4269-908f-2ccb2e420608"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""c982de5c-1e84-4afe-9ab5-1cef724c159a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7e9fc912-2255-47ed-ac0c-ec86b9b32068"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""514886ee-b64c-4274-bd72-ac3e13d08412"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a0030a78-93af-4647-82bc-c0c9fa685d0b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c4f005f8-2a7d-4c92-8f59-04da21f25272"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""98c2b6f8-0da4-454b-a774-978023efe8b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f139ba7a-14e9-4d2a-802c-dd5faf1bf5e9"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""70e907ca-fdd9-4f94-a29a-10d63e5d04fa"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""bea73c1c-fc4c-4fe9-8a65-ff60deb68141"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5030b964-b365-4a60-94b0-546e26b45acd"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87b1d1b7-7d62-46fa-928f-842cd938131a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6bae206-9a3e-4800-94f0-e334542959a6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa604c1a-887b-45db-a437-8338d720610d"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AnyKeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e98ac63d-3020-489a-ab46-3f0fe50773ed"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AnyKeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90ad4b06-57c9-4829-aa58-a3987796b7b5"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AnyKeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3faf262-4414-4d55-b68f-01302313ebdc"",
                    ""path"": ""<Mouse>/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AnyKeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d70d94e1-830b-445c-9a4d-09476e9b8247"",
                    ""path"": ""<Mouse>/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AnyKeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""530bbce4-45ec-4fcd-907c-3f549c3ce18c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""370770d6-cc8f-4f29-b165-d6766564b447"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f46cad50-c27c-4a0f-9d82-54676bde700c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d30cfd36-47d6-45c6-b67d-7a664e569f84"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ad68d3c2-186b-4379-816c-f2040e716cde"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""7e66a337-9c87-44c5-b4b0-5f3a83090842"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f9ba0cd2-28db-485f-a74c-ebd1a2c46bbf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""47166312-769e-4dc9-b34e-b0e52b173ecf"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c6cabd2a-f330-4485-a784-45687bc3a727"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c105cb30-41a2-4e76-8fa4-9922408a4987"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b6158190-51b2-4cac-9a11-a045253cb9a4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cdda1066-6d57-401b-ac97-87d76f478870"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0fb6b0fd-4a77-460f-9307-17551b146936"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e606d27c-7170-4a99-b660-44cafb4f99d3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b24f9c9f-0297-434c-bece-3bb9c1386395"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12d78e0a-0f89-4d7f-bebc-51d45449aa4d"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c088a523-f0a9-4da2-81de-7f396490a2ed"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8e9ac7c-686c-4e50-92d6-5fb27a4e098d"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0a48663-d5e5-40c7-b2e9-b3f94dc3e40a"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62a5bda2-d3a1-4501-9558-266791cc28ae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8ade00c-6724-4c85-9db9-edddae709491"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""776a5fff-134f-4fb9-993b-9a1c55694ef3"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45976445-4915-404e-9e54-816fb91f8370"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c61bf586-f66b-4eab-8292-cbf84b734133"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd1029a7-d0d5-46d7-9377-3b62ca85a7f4"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e428472a-7d86-4ec1-9616-18cc0a5c76f9"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e0573f3-4172-49c3-8c46-d87d0b57823b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c074af3-fd23-46b6-b45a-a6bd24243f97"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f95877fa-b105-4b7d-a87e-9605cb6feeba"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Dpad"",
                    ""id"": ""6592c40d-6fd9-42b0-a3fb-7e842ab114a3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5bac4c33-0f2c-4fea-9ada-954a356dc54c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""92f548cb-093d-44ed-b4c8-755916049357"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a2eaa973-5dc3-45df-8b30-0ff7612f776f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""09a2fdc7-de50-4fa6-8890-f0b6bbb36487"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""507db58d-d8f6-4bed-96d3-376dbbacde1f"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;KeyboardMouse"",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ammount"",
            ""id"": ""794c4a23-80ab-469e-b7c8-2ab81a9478d5"",
            ""actions"": [
                {
                    ""name"": ""AddIngredient"",
                    ""type"": ""Button"",
                    ""id"": ""1a07056f-167c-4a39-b7fe-79701a89f953"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RemoveIngredient"",
                    ""type"": ""Button"",
                    ""id"": ""06b54f4a-d8c0-41e3-b605-5ba57ece4443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""935cb9a3-759f-45e6-a3ef-18d2558731a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""a08bf5b8-22d3-4ec7-bea3-93b48239939c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""315f9207-e06c-4ed0-abbc-dda5aa36f7b7"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AddIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d572a22-ee53-44cf-8b63-72301a75d0fc"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AddIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f278643f-87b4-4524-be16-99608d1df42c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AddIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3cd1329-da00-4f27-b373-ec7b604c182f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AddIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be63054a-245d-4952-ac46-01f425f94662"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RemoveIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1d8f130-da5f-43e1-a07c-5206b2a58e32"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RemoveIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f594661a-ca4a-49b1-a680-80cf6501a9ff"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RemoveIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d996aa2c-413f-419c-8e6e-acf807a7bcbd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RemoveIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a78b317e-8044-406b-807e-80307f545b9d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""543a0ffd-30bd-4d0f-9aa8-c168d88cf84a"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec530f09-4428-46c0-916c-e719c55ce228"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd8562aa-92cc-4178-92ff-6bc75f99a83c"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""270d22ac-6e67-4b16-822d-370230dcd088"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Tabs"",
            ""id"": ""9b00190c-e8ac-4c4c-bd7b-302b7f736bf4"",
            ""actions"": [
                {
                    ""name"": ""NextTab"",
                    ""type"": ""Button"",
                    ""id"": ""c3142671-0da4-4123-8cd0-8ef44e3000f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousTab"",
                    ""type"": ""Button"",
                    ""id"": ""1a1a879b-c4e9-4a8a-ac16-60fbab666ffe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d18c250b-2143-43f4-aca3-1ea7a879c897"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be5627f5-efdc-46b5-a12e-ec25b977a640"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PreviousTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Amafood"",
            ""id"": ""bd93baa2-dc13-4764-9812-def00b70aa35"",
            ""actions"": [
                {
                    ""name"": ""ChangeList"",
                    ""type"": ""Button"",
                    ""id"": ""c104e7fb-e701-4880-a0d5-d1ac680493b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OrderAndClear"",
                    ""type"": ""Button"",
                    ""id"": ""d882eb63-93fb-4e05-bd5b-5b741ea49389"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1.5),Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e04b77a0-c950-40bc-aa8a-6f5d22761fb4"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeList"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80084246-6ac9-4cff-843f-5dd00b2239e5"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""ChangeList"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4e405be-818e-45a5-be78-15228f99c4f6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OrderAndClear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c3fbd5f-ea13-4d3a-a300-dbc21a216abb"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""OrderAndClear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpreadPaste"",
            ""id"": ""4b057310-33a5-479a-98cf-ffc34e8b1b5f"",
            ""actions"": [
                {
                    ""name"": ""SpreadPasteAction"",
                    ""type"": ""Value"",
                    ""id"": ""df5fed86-1788-4a65-abda-556772ae2f65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""46069e79-8268-4697-8bae-ac7e63c49d6d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""SpreadPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab464387-bc0c-443b-a101-360d90ff8966"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpreadPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpreadPasteV2"",
            ""id"": ""e5b85c26-cb34-4ea4-8adb-cace98a48b23"",
            ""actions"": [
                {
                    ""name"": ""SpreadPasteFirstAction"",
                    ""type"": ""Button"",
                    ""id"": ""231b9b46-0d1f-4a98-9e47-55d0525dbd61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpreadPasteSecondAction"",
                    ""type"": ""Button"",
                    ""id"": ""e047aa21-a1fe-470a-ae81-f7e5837749d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2179660d-064e-43c4-a606-f50ae589c902"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpreadPasteFirstAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bbc25e8-d74b-45ea-a868-6da609ef7054"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""SpreadPasteFirstAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37c96b08-80ed-48a2-bbe5-88364046a92b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpreadPasteSecondAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c35c859b-d3b4-4b6a-8734-2b7baea17d0e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""SpreadPasteSecondAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BurnTop"",
            ""id"": ""206dee9d-8672-4f18-98b1-d21df08131a6"",
            ""actions"": [
                {
                    ""name"": ""BurnTopAction"",
                    ""type"": ""Value"",
                    ""id"": ""ecdbdbb1-94b9-4a44-8f49-c573e3c26488"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""af292c55-c221-49e6-a1b0-af4a4371f0da"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""BurnTopAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5345c42-9d59-476b-905e-c29aa6311dca"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BurnTopAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RollPaste"",
            ""id"": ""2a77045c-e556-4930-9476-39a991673936"",
            ""actions"": [
                {
                    ""name"": ""RollPasteAction"",
                    ""type"": ""Value"",
                    ""id"": ""1dac96ba-9f53-4391-a674-5a15567ba27e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Joystick"",
                    ""id"": ""bd012439-0e46-4e75-85bc-8de0967371a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""00aeeed8-cc4f-4028-9ff7-4a761d4c3fe2"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2ebac584-eaf4-4666-b8b9-fc74fec939e6"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""43883835-be7a-4f82-8bda-44700f9ed4e9"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""52ba4b39-b992-4ba3-9b56-902221eacdbe"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftRightAction"",
                    ""id"": ""97288f26-074f-4aa5-8648-62c3aa5a7038"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b4b675df-e767-4410-a366-d22f2d32b565"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""efc4f3e5-55e3-4ef8-a3e8-cdca0035876a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64bc01f5-9afc-48b8-94c6-13b294de7af7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3894c0f2-1962-40c6-9e3c-a29dff58b805"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RollPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""AddItems"",
            ""id"": ""9fd56c07-fbba-4744-8c34-1eb08047e60b"",
            ""actions"": [
                {
                    ""name"": ""AddItemsAction"",
                    ""type"": ""Button"",
                    ""id"": ""9e5da248-9d5e-4120-95df-c781a37b188a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""53815827-1d00-471e-a47a-8d960c3d911a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""AddItemsAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cd8dd82-9edd-4e49-a55b-d528e8b4c593"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AddItemsAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143e95c0-1718-4863-ab87-aa65866b7ecd"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AddItemsAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CutPaste"",
            ""id"": ""cce81d0d-6eef-49e5-ace7-b1067df4088b"",
            ""actions"": [
                {
                    ""name"": ""CutPasteAction"",
                    ""type"": ""Button"",
                    ""id"": ""c67f6647-2bbf-43a2-800d-dc544e2d5ada"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ebb83a92-a4d7-417e-bff2-fe6c127269dd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""CutPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a9ce429-6591-437a-a438-7ac91aea6bf6"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CutPasteAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CutPasteV2"",
            ""id"": ""ec6d81bf-4baa-4509-9b16-2261bef4a38d"",
            ""actions"": [
                {
                    ""name"": ""UpAction"",
                    ""type"": ""Button"",
                    ""id"": ""0ca64dc5-d469-45c2-8ef4-5bf8e7bd641b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownAction"",
                    ""type"": ""Button"",
                    ""id"": ""a3ac9355-4379-4685-880b-7fee7d0839a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightAction"",
                    ""type"": ""Button"",
                    ""id"": ""20540c03-37e6-4e6a-b808-737bc15898ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftAction"",
                    ""type"": ""Button"",
                    ""id"": ""7bf61f55-277d-4f4a-ad47-e3d8ae982819"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1cd9eee8-defd-4ea3-b410-16fe183b8d86"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UpAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0d6b986-4b81-4543-b7ec-44def5b72aad"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""UpAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b71f67b-2858-4b0f-a7e7-fa986f7fe515"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DownAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b1861a6-e422-4a95-8fed-9c84b47f8b9b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""DownAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8573e09-8e79-48b1-af2a-38621ed05cb0"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a3ff4f4-a361-4bd7-9646-c881a78ac880"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RightAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""969f3827-5010-4304-8ee1-1bd31bac6b92"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e97fc0e3-48d5-49e7-b51b-abf75c34df5b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""LeftAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PoorLiquid"",
            ""id"": ""988231dd-17c5-4088-abad-8e64c83acd5d"",
            ""actions"": [
                {
                    ""name"": ""PoorLiquidAction"",
                    ""type"": ""Value"",
                    ""id"": ""53c5f980-35c3-4fe8-9dc9-f4cc1f7eda9e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c02749fa-219c-4777-8e1a-4be7e429bc84"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PoorLiquidAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02025e13-9718-4bae-a72b-1a6d8e8e1e13"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PoorLiquidAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""5bc959d0-6276-4017-9445-5532c434ff99"",
            ""actions"": [
                {
                    ""name"": ""SpawnTruck"",
                    ""type"": ""Button"",
                    ""id"": ""c1325ed1-580e-47c1-9078-60ec1d0e334c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""52f2d5d5-6023-4513-bda5-430f3fc70f12"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnTruck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Workstation"",
            ""id"": ""8b7a84a5-4ca1-44c1-9d44-bdae276bc584"",
            ""actions"": [
                {
                    ""name"": ""DisplayRecipe"",
                    ""type"": ""Button"",
                    ""id"": ""7290e45c-33b1-420d-a426-09054b675998"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cook"",
                    ""type"": ""Button"",
                    ""id"": ""00d04e5e-282c-4682-90ac-92cb7182f607"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clear"",
                    ""type"": ""Button"",
                    ""id"": ""cf71413d-1bec-4006-88b8-339342fb73ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aa792535-552f-4c2d-8e40-d6c58fc56381"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DisplayRecipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e0c9843-bcdf-45e1-9f26-3d1138647c6e"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DisplayRecipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60fc6fc8-c1f6-4af4-9b56-48d74fa0b5a7"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0886008-f6f6-425a-b661-fae75ced13e7"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42e149ef-c4cd-421b-bd73-b15dac34b617"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Audio"",
            ""id"": ""6da5665e-f77f-419f-85fd-39e16c4e19bf"",
            ""actions"": [
                {
                    ""name"": ""MuteSource"",
                    ""type"": ""Button"",
                    ""id"": ""48e0df87-8ac9-4ec5-8e1c-d19679e065a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""50d0a988-5843-42b2-9819-35b536fbe696"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MuteSource"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aaea0759-3149-4ad9-8de2-a49b74ed01be"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MuteSource"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""eb8921a0-4a91-44a1-8751-2c058a058917"",
            ""actions"": [
                {
                    ""name"": ""Dialogue1"",
                    ""type"": ""Button"",
                    ""id"": ""52830095-0bb1-4f2f-a3ed-749b48739f54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dialogue2"",
                    ""type"": ""Button"",
                    ""id"": ""7bd8f85d-5d1e-461d-8ecf-66e939283b05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dialogue3"",
                    ""type"": ""Button"",
                    ""id"": ""b5936b49-07bf-433e-92cf-2eb9096bb22c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c52b2368-0ad4-435f-851b-9cdf8c27287f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ead0b5e-e1cf-4c0b-a1c2-e6cc5b8ab3fa"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f6a3ca6-f29c-490f-ada8-5df84f667588"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RecipeBook"",
            ""id"": ""39c87900-0e03-40bc-bc2e-088d653c46d0"",
            ""actions"": [
                {
                    ""name"": ""PreviousPage"",
                    ""type"": ""Button"",
                    ""id"": ""ef7f6ada-ccab-4f77-b4ab-f98293f9f6b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextPage"",
                    ""type"": ""Button"",
                    ""id"": ""87ced78b-c17d-40b4-bc1b-e7d40b86de4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""61a76c94-19cd-4955-9ee9-654b9c08debb"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b48e794-5414-48ab-9023-65c1d6bf2d2f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PreviousPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_AllowCameraMovement = m_Player.FindAction("AllowCameraMovement", throwIfNotFound: true);
        m_Player_DisplayRecipesBook = m_Player.FindAction("DisplayRecipesBook", throwIfNotFound: true);
        // Pause
        m_Pause = asset.FindActionMap("Pause", throwIfNotFound: true);
        m_Pause_Unpause = m_Pause.FindAction("Unpause", throwIfNotFound: true);
        // Building
        m_Building = asset.FindActionMap("Building", throwIfNotFound: true);
        m_Building_Quit = m_Building.FindAction("Quit", throwIfNotFound: true);
        m_Building_Select = m_Building.FindAction("Select", throwIfNotFound: true);
        m_Building_Move = m_Building.FindAction("Move", throwIfNotFound: true);
        m_Building_Rotate = m_Building.FindAction("Rotate", throwIfNotFound: true);
        m_Building_DisplayFurnitureStore = m_Building.FindAction("DisplayFurnitureStore", throwIfNotFound: true);
        m_Building_Sell = m_Building.FindAction("Sell", throwIfNotFound: true);
        m_Building_EnablePreview = m_Building.FindAction("EnablePreview", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Quit = m_UI.FindAction("Quit", throwIfNotFound: true);
        m_UI_AnyKeyPressed = m_UI.FindAction("AnyKeyPressed", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_UI_AnyKey = m_UI.FindAction("AnyKey", throwIfNotFound: true);
        // Ammount
        m_Ammount = asset.FindActionMap("Ammount", throwIfNotFound: true);
        m_Ammount_AddIngredient = m_Ammount.FindAction("AddIngredient", throwIfNotFound: true);
        m_Ammount_RemoveIngredient = m_Ammount.FindAction("RemoveIngredient", throwIfNotFound: true);
        m_Ammount_Confirm = m_Ammount.FindAction("Confirm", throwIfNotFound: true);
        m_Ammount_Cancel = m_Ammount.FindAction("Cancel", throwIfNotFound: true);
        // Tabs
        m_Tabs = asset.FindActionMap("Tabs", throwIfNotFound: true);
        m_Tabs_NextTab = m_Tabs.FindAction("NextTab", throwIfNotFound: true);
        m_Tabs_PreviousTab = m_Tabs.FindAction("PreviousTab", throwIfNotFound: true);
        // Amafood
        m_Amafood = asset.FindActionMap("Amafood", throwIfNotFound: true);
        m_Amafood_ChangeList = m_Amafood.FindAction("ChangeList", throwIfNotFound: true);
        m_Amafood_OrderAndClear = m_Amafood.FindAction("OrderAndClear", throwIfNotFound: true);
        // SpreadPaste
        m_SpreadPaste = asset.FindActionMap("SpreadPaste", throwIfNotFound: true);
        m_SpreadPaste_SpreadPasteAction = m_SpreadPaste.FindAction("SpreadPasteAction", throwIfNotFound: true);
        // SpreadPasteV2
        m_SpreadPasteV2 = asset.FindActionMap("SpreadPasteV2", throwIfNotFound: true);
        m_SpreadPasteV2_SpreadPasteFirstAction = m_SpreadPasteV2.FindAction("SpreadPasteFirstAction", throwIfNotFound: true);
        m_SpreadPasteV2_SpreadPasteSecondAction = m_SpreadPasteV2.FindAction("SpreadPasteSecondAction", throwIfNotFound: true);
        // BurnTop
        m_BurnTop = asset.FindActionMap("BurnTop", throwIfNotFound: true);
        m_BurnTop_BurnTopAction = m_BurnTop.FindAction("BurnTopAction", throwIfNotFound: true);
        // RollPaste
        m_RollPaste = asset.FindActionMap("RollPaste", throwIfNotFound: true);
        m_RollPaste_RollPasteAction = m_RollPaste.FindAction("RollPasteAction", throwIfNotFound: true);
        // AddItems
        m_AddItems = asset.FindActionMap("AddItems", throwIfNotFound: true);
        m_AddItems_AddItemsAction = m_AddItems.FindAction("AddItemsAction", throwIfNotFound: true);
        // CutPaste
        m_CutPaste = asset.FindActionMap("CutPaste", throwIfNotFound: true);
        m_CutPaste_CutPasteAction = m_CutPaste.FindAction("CutPasteAction", throwIfNotFound: true);
        // CutPasteV2
        m_CutPasteV2 = asset.FindActionMap("CutPasteV2", throwIfNotFound: true);
        m_CutPasteV2_UpAction = m_CutPasteV2.FindAction("UpAction", throwIfNotFound: true);
        m_CutPasteV2_DownAction = m_CutPasteV2.FindAction("DownAction", throwIfNotFound: true);
        m_CutPasteV2_RightAction = m_CutPasteV2.FindAction("RightAction", throwIfNotFound: true);
        m_CutPasteV2_LeftAction = m_CutPasteV2.FindAction("LeftAction", throwIfNotFound: true);
        // PoorLiquid
        m_PoorLiquid = asset.FindActionMap("PoorLiquid", throwIfNotFound: true);
        m_PoorLiquid_PoorLiquidAction = m_PoorLiquid.FindAction("PoorLiquidAction", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_SpawnTruck = m_Debug.FindAction("SpawnTruck", throwIfNotFound: true);
        // Workstation
        m_Workstation = asset.FindActionMap("Workstation", throwIfNotFound: true);
        m_Workstation_DisplayRecipe = m_Workstation.FindAction("DisplayRecipe", throwIfNotFound: true);
        m_Workstation_Cook = m_Workstation.FindAction("Cook", throwIfNotFound: true);
        m_Workstation_Clear = m_Workstation.FindAction("Clear", throwIfNotFound: true);
        // Audio
        m_Audio = asset.FindActionMap("Audio", throwIfNotFound: true);
        m_Audio_MuteSource = m_Audio.FindAction("MuteSource", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_Dialogue1 = m_Dialogue.FindAction("Dialogue1", throwIfNotFound: true);
        m_Dialogue_Dialogue2 = m_Dialogue.FindAction("Dialogue2", throwIfNotFound: true);
        m_Dialogue_Dialogue3 = m_Dialogue.FindAction("Dialogue3", throwIfNotFound: true);
        // RecipeBook
        m_RecipeBook = asset.FindActionMap("RecipeBook", throwIfNotFound: true);
        m_RecipeBook_PreviousPage = m_RecipeBook.FindAction("PreviousPage", throwIfNotFound: true);
        m_RecipeBook_NextPage = m_RecipeBook.FindAction("NextPage", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_AllowCameraMovement;
    private readonly InputAction m_Player_DisplayRecipesBook;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @AllowCameraMovement => m_Wrapper.m_Player_AllowCameraMovement;
        public InputAction @DisplayRecipesBook => m_Wrapper.m_Player_DisplayRecipesBook;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @AllowCameraMovement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAllowCameraMovement;
                @AllowCameraMovement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAllowCameraMovement;
                @AllowCameraMovement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAllowCameraMovement;
                @DisplayRecipesBook.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDisplayRecipesBook;
                @DisplayRecipesBook.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDisplayRecipesBook;
                @DisplayRecipesBook.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDisplayRecipesBook;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @AllowCameraMovement.started += instance.OnAllowCameraMovement;
                @AllowCameraMovement.performed += instance.OnAllowCameraMovement;
                @AllowCameraMovement.canceled += instance.OnAllowCameraMovement;
                @DisplayRecipesBook.started += instance.OnDisplayRecipesBook;
                @DisplayRecipesBook.performed += instance.OnDisplayRecipesBook;
                @DisplayRecipesBook.canceled += instance.OnDisplayRecipesBook;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Pause
    private readonly InputActionMap m_Pause;
    private IPauseActions m_PauseActionsCallbackInterface;
    private readonly InputAction m_Pause_Unpause;
    public struct PauseActions
    {
        private @PlayerInput m_Wrapper;
        public PauseActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Unpause => m_Wrapper.m_Pause_Unpause;
        public InputActionMap Get() { return m_Wrapper.m_Pause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseActions set) { return set.Get(); }
        public void SetCallbacks(IPauseActions instance)
        {
            if (m_Wrapper.m_PauseActionsCallbackInterface != null)
            {
                @Unpause.started -= m_Wrapper.m_PauseActionsCallbackInterface.OnUnpause;
                @Unpause.performed -= m_Wrapper.m_PauseActionsCallbackInterface.OnUnpause;
                @Unpause.canceled -= m_Wrapper.m_PauseActionsCallbackInterface.OnUnpause;
            }
            m_Wrapper.m_PauseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Unpause.started += instance.OnUnpause;
                @Unpause.performed += instance.OnUnpause;
                @Unpause.canceled += instance.OnUnpause;
            }
        }
    }
    public PauseActions @Pause => new PauseActions(this);

    // Building
    private readonly InputActionMap m_Building;
    private IBuildingActions m_BuildingActionsCallbackInterface;
    private readonly InputAction m_Building_Quit;
    private readonly InputAction m_Building_Select;
    private readonly InputAction m_Building_Move;
    private readonly InputAction m_Building_Rotate;
    private readonly InputAction m_Building_DisplayFurnitureStore;
    private readonly InputAction m_Building_Sell;
    private readonly InputAction m_Building_EnablePreview;
    public struct BuildingActions
    {
        private @PlayerInput m_Wrapper;
        public BuildingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quit => m_Wrapper.m_Building_Quit;
        public InputAction @Select => m_Wrapper.m_Building_Select;
        public InputAction @Move => m_Wrapper.m_Building_Move;
        public InputAction @Rotate => m_Wrapper.m_Building_Rotate;
        public InputAction @DisplayFurnitureStore => m_Wrapper.m_Building_DisplayFurnitureStore;
        public InputAction @Sell => m_Wrapper.m_Building_Sell;
        public InputAction @EnablePreview => m_Wrapper.m_Building_EnablePreview;
        public InputActionMap Get() { return m_Wrapper.m_Building; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildingActions set) { return set.Get(); }
        public void SetCallbacks(IBuildingActions instance)
        {
            if (m_Wrapper.m_BuildingActionsCallbackInterface != null)
            {
                @Quit.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnQuit;
                @Select.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSelect;
                @Move.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnMove;
                @Rotate.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnRotate;
                @DisplayFurnitureStore.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnDisplayFurnitureStore;
                @DisplayFurnitureStore.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnDisplayFurnitureStore;
                @DisplayFurnitureStore.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnDisplayFurnitureStore;
                @Sell.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSell;
                @Sell.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSell;
                @Sell.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnSell;
                @EnablePreview.started -= m_Wrapper.m_BuildingActionsCallbackInterface.OnEnablePreview;
                @EnablePreview.performed -= m_Wrapper.m_BuildingActionsCallbackInterface.OnEnablePreview;
                @EnablePreview.canceled -= m_Wrapper.m_BuildingActionsCallbackInterface.OnEnablePreview;
            }
            m_Wrapper.m_BuildingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @DisplayFurnitureStore.started += instance.OnDisplayFurnitureStore;
                @DisplayFurnitureStore.performed += instance.OnDisplayFurnitureStore;
                @DisplayFurnitureStore.canceled += instance.OnDisplayFurnitureStore;
                @Sell.started += instance.OnSell;
                @Sell.performed += instance.OnSell;
                @Sell.canceled += instance.OnSell;
                @EnablePreview.started += instance.OnEnablePreview;
                @EnablePreview.performed += instance.OnEnablePreview;
                @EnablePreview.canceled += instance.OnEnablePreview;
            }
        }
    }
    public BuildingActions @Building => new BuildingActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Quit;
    private readonly InputAction m_UI_AnyKeyPressed;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    private readonly InputAction m_UI_AnyKey;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quit => m_Wrapper.m_UI_Quit;
        public InputAction @AnyKeyPressed => m_Wrapper.m_UI_AnyKeyPressed;
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputAction @AnyKey => m_Wrapper.m_UI_AnyKey;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Quit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnQuit;
                @AnyKeyPressed.started -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKeyPressed;
                @AnyKeyPressed.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKeyPressed;
                @AnyKeyPressed.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKeyPressed;
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @AnyKey.started -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKey;
                @AnyKey.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKey;
                @AnyKey.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnAnyKey;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @AnyKeyPressed.started += instance.OnAnyKeyPressed;
                @AnyKeyPressed.performed += instance.OnAnyKeyPressed;
                @AnyKeyPressed.canceled += instance.OnAnyKeyPressed;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                @AnyKey.started += instance.OnAnyKey;
                @AnyKey.performed += instance.OnAnyKey;
                @AnyKey.canceled += instance.OnAnyKey;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Ammount
    private readonly InputActionMap m_Ammount;
    private IAmmountActions m_AmmountActionsCallbackInterface;
    private readonly InputAction m_Ammount_AddIngredient;
    private readonly InputAction m_Ammount_RemoveIngredient;
    private readonly InputAction m_Ammount_Confirm;
    private readonly InputAction m_Ammount_Cancel;
    public struct AmmountActions
    {
        private @PlayerInput m_Wrapper;
        public AmmountActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @AddIngredient => m_Wrapper.m_Ammount_AddIngredient;
        public InputAction @RemoveIngredient => m_Wrapper.m_Ammount_RemoveIngredient;
        public InputAction @Confirm => m_Wrapper.m_Ammount_Confirm;
        public InputAction @Cancel => m_Wrapper.m_Ammount_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_Ammount; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AmmountActions set) { return set.Get(); }
        public void SetCallbacks(IAmmountActions instance)
        {
            if (m_Wrapper.m_AmmountActionsCallbackInterface != null)
            {
                @AddIngredient.started -= m_Wrapper.m_AmmountActionsCallbackInterface.OnAddIngredient;
                @AddIngredient.performed -= m_Wrapper.m_AmmountActionsCallbackInterface.OnAddIngredient;
                @AddIngredient.canceled -= m_Wrapper.m_AmmountActionsCallbackInterface.OnAddIngredient;
                @RemoveIngredient.started -= m_Wrapper.m_AmmountActionsCallbackInterface.OnRemoveIngredient;
                @RemoveIngredient.performed -= m_Wrapper.m_AmmountActionsCallbackInterface.OnRemoveIngredient;
                @RemoveIngredient.canceled -= m_Wrapper.m_AmmountActionsCallbackInterface.OnRemoveIngredient;
                @Confirm.started -= m_Wrapper.m_AmmountActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_AmmountActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_AmmountActionsCallbackInterface.OnConfirm;
                @Cancel.started -= m_Wrapper.m_AmmountActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_AmmountActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_AmmountActionsCallbackInterface.OnCancel;
            }
            m_Wrapper.m_AmmountActionsCallbackInterface = instance;
            if (instance != null)
            {
                @AddIngredient.started += instance.OnAddIngredient;
                @AddIngredient.performed += instance.OnAddIngredient;
                @AddIngredient.canceled += instance.OnAddIngredient;
                @RemoveIngredient.started += instance.OnRemoveIngredient;
                @RemoveIngredient.performed += instance.OnRemoveIngredient;
                @RemoveIngredient.canceled += instance.OnRemoveIngredient;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
            }
        }
    }
    public AmmountActions @Ammount => new AmmountActions(this);

    // Tabs
    private readonly InputActionMap m_Tabs;
    private ITabsActions m_TabsActionsCallbackInterface;
    private readonly InputAction m_Tabs_NextTab;
    private readonly InputAction m_Tabs_PreviousTab;
    public struct TabsActions
    {
        private @PlayerInput m_Wrapper;
        public TabsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextTab => m_Wrapper.m_Tabs_NextTab;
        public InputAction @PreviousTab => m_Wrapper.m_Tabs_PreviousTab;
        public InputActionMap Get() { return m_Wrapper.m_Tabs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TabsActions set) { return set.Get(); }
        public void SetCallbacks(ITabsActions instance)
        {
            if (m_Wrapper.m_TabsActionsCallbackInterface != null)
            {
                @NextTab.started -= m_Wrapper.m_TabsActionsCallbackInterface.OnNextTab;
                @NextTab.performed -= m_Wrapper.m_TabsActionsCallbackInterface.OnNextTab;
                @NextTab.canceled -= m_Wrapper.m_TabsActionsCallbackInterface.OnNextTab;
                @PreviousTab.started -= m_Wrapper.m_TabsActionsCallbackInterface.OnPreviousTab;
                @PreviousTab.performed -= m_Wrapper.m_TabsActionsCallbackInterface.OnPreviousTab;
                @PreviousTab.canceled -= m_Wrapper.m_TabsActionsCallbackInterface.OnPreviousTab;
            }
            m_Wrapper.m_TabsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NextTab.started += instance.OnNextTab;
                @NextTab.performed += instance.OnNextTab;
                @NextTab.canceled += instance.OnNextTab;
                @PreviousTab.started += instance.OnPreviousTab;
                @PreviousTab.performed += instance.OnPreviousTab;
                @PreviousTab.canceled += instance.OnPreviousTab;
            }
        }
    }
    public TabsActions @Tabs => new TabsActions(this);

    // Amafood
    private readonly InputActionMap m_Amafood;
    private IAmafoodActions m_AmafoodActionsCallbackInterface;
    private readonly InputAction m_Amafood_ChangeList;
    private readonly InputAction m_Amafood_OrderAndClear;
    public struct AmafoodActions
    {
        private @PlayerInput m_Wrapper;
        public AmafoodActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangeList => m_Wrapper.m_Amafood_ChangeList;
        public InputAction @OrderAndClear => m_Wrapper.m_Amafood_OrderAndClear;
        public InputActionMap Get() { return m_Wrapper.m_Amafood; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AmafoodActions set) { return set.Get(); }
        public void SetCallbacks(IAmafoodActions instance)
        {
            if (m_Wrapper.m_AmafoodActionsCallbackInterface != null)
            {
                @ChangeList.started -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnChangeList;
                @ChangeList.performed -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnChangeList;
                @ChangeList.canceled -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnChangeList;
                @OrderAndClear.started -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnOrderAndClear;
                @OrderAndClear.performed -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnOrderAndClear;
                @OrderAndClear.canceled -= m_Wrapper.m_AmafoodActionsCallbackInterface.OnOrderAndClear;
            }
            m_Wrapper.m_AmafoodActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ChangeList.started += instance.OnChangeList;
                @ChangeList.performed += instance.OnChangeList;
                @ChangeList.canceled += instance.OnChangeList;
                @OrderAndClear.started += instance.OnOrderAndClear;
                @OrderAndClear.performed += instance.OnOrderAndClear;
                @OrderAndClear.canceled += instance.OnOrderAndClear;
            }
        }
    }
    public AmafoodActions @Amafood => new AmafoodActions(this);

    // SpreadPaste
    private readonly InputActionMap m_SpreadPaste;
    private ISpreadPasteActions m_SpreadPasteActionsCallbackInterface;
    private readonly InputAction m_SpreadPaste_SpreadPasteAction;
    public struct SpreadPasteActions
    {
        private @PlayerInput m_Wrapper;
        public SpreadPasteActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpreadPasteAction => m_Wrapper.m_SpreadPaste_SpreadPasteAction;
        public InputActionMap Get() { return m_Wrapper.m_SpreadPaste; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpreadPasteActions set) { return set.Get(); }
        public void SetCallbacks(ISpreadPasteActions instance)
        {
            if (m_Wrapper.m_SpreadPasteActionsCallbackInterface != null)
            {
                @SpreadPasteAction.started -= m_Wrapper.m_SpreadPasteActionsCallbackInterface.OnSpreadPasteAction;
                @SpreadPasteAction.performed -= m_Wrapper.m_SpreadPasteActionsCallbackInterface.OnSpreadPasteAction;
                @SpreadPasteAction.canceled -= m_Wrapper.m_SpreadPasteActionsCallbackInterface.OnSpreadPasteAction;
            }
            m_Wrapper.m_SpreadPasteActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SpreadPasteAction.started += instance.OnSpreadPasteAction;
                @SpreadPasteAction.performed += instance.OnSpreadPasteAction;
                @SpreadPasteAction.canceled += instance.OnSpreadPasteAction;
            }
        }
    }
    public SpreadPasteActions @SpreadPaste => new SpreadPasteActions(this);

    // SpreadPasteV2
    private readonly InputActionMap m_SpreadPasteV2;
    private ISpreadPasteV2Actions m_SpreadPasteV2ActionsCallbackInterface;
    private readonly InputAction m_SpreadPasteV2_SpreadPasteFirstAction;
    private readonly InputAction m_SpreadPasteV2_SpreadPasteSecondAction;
    public struct SpreadPasteV2Actions
    {
        private @PlayerInput m_Wrapper;
        public SpreadPasteV2Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpreadPasteFirstAction => m_Wrapper.m_SpreadPasteV2_SpreadPasteFirstAction;
        public InputAction @SpreadPasteSecondAction => m_Wrapper.m_SpreadPasteV2_SpreadPasteSecondAction;
        public InputActionMap Get() { return m_Wrapper.m_SpreadPasteV2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpreadPasteV2Actions set) { return set.Get(); }
        public void SetCallbacks(ISpreadPasteV2Actions instance)
        {
            if (m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface != null)
            {
                @SpreadPasteFirstAction.started -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteFirstAction;
                @SpreadPasteFirstAction.performed -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteFirstAction;
                @SpreadPasteFirstAction.canceled -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteFirstAction;
                @SpreadPasteSecondAction.started -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteSecondAction;
                @SpreadPasteSecondAction.performed -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteSecondAction;
                @SpreadPasteSecondAction.canceled -= m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface.OnSpreadPasteSecondAction;
            }
            m_Wrapper.m_SpreadPasteV2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SpreadPasteFirstAction.started += instance.OnSpreadPasteFirstAction;
                @SpreadPasteFirstAction.performed += instance.OnSpreadPasteFirstAction;
                @SpreadPasteFirstAction.canceled += instance.OnSpreadPasteFirstAction;
                @SpreadPasteSecondAction.started += instance.OnSpreadPasteSecondAction;
                @SpreadPasteSecondAction.performed += instance.OnSpreadPasteSecondAction;
                @SpreadPasteSecondAction.canceled += instance.OnSpreadPasteSecondAction;
            }
        }
    }
    public SpreadPasteV2Actions @SpreadPasteV2 => new SpreadPasteV2Actions(this);

    // BurnTop
    private readonly InputActionMap m_BurnTop;
    private IBurnTopActions m_BurnTopActionsCallbackInterface;
    private readonly InputAction m_BurnTop_BurnTopAction;
    public struct BurnTopActions
    {
        private @PlayerInput m_Wrapper;
        public BurnTopActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @BurnTopAction => m_Wrapper.m_BurnTop_BurnTopAction;
        public InputActionMap Get() { return m_Wrapper.m_BurnTop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BurnTopActions set) { return set.Get(); }
        public void SetCallbacks(IBurnTopActions instance)
        {
            if (m_Wrapper.m_BurnTopActionsCallbackInterface != null)
            {
                @BurnTopAction.started -= m_Wrapper.m_BurnTopActionsCallbackInterface.OnBurnTopAction;
                @BurnTopAction.performed -= m_Wrapper.m_BurnTopActionsCallbackInterface.OnBurnTopAction;
                @BurnTopAction.canceled -= m_Wrapper.m_BurnTopActionsCallbackInterface.OnBurnTopAction;
            }
            m_Wrapper.m_BurnTopActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BurnTopAction.started += instance.OnBurnTopAction;
                @BurnTopAction.performed += instance.OnBurnTopAction;
                @BurnTopAction.canceled += instance.OnBurnTopAction;
            }
        }
    }
    public BurnTopActions @BurnTop => new BurnTopActions(this);

    // RollPaste
    private readonly InputActionMap m_RollPaste;
    private IRollPasteActions m_RollPasteActionsCallbackInterface;
    private readonly InputAction m_RollPaste_RollPasteAction;
    public struct RollPasteActions
    {
        private @PlayerInput m_Wrapper;
        public RollPasteActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @RollPasteAction => m_Wrapper.m_RollPaste_RollPasteAction;
        public InputActionMap Get() { return m_Wrapper.m_RollPaste; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RollPasteActions set) { return set.Get(); }
        public void SetCallbacks(IRollPasteActions instance)
        {
            if (m_Wrapper.m_RollPasteActionsCallbackInterface != null)
            {
                @RollPasteAction.started -= m_Wrapper.m_RollPasteActionsCallbackInterface.OnRollPasteAction;
                @RollPasteAction.performed -= m_Wrapper.m_RollPasteActionsCallbackInterface.OnRollPasteAction;
                @RollPasteAction.canceled -= m_Wrapper.m_RollPasteActionsCallbackInterface.OnRollPasteAction;
            }
            m_Wrapper.m_RollPasteActionsCallbackInterface = instance;
            if (instance != null)
            {
                @RollPasteAction.started += instance.OnRollPasteAction;
                @RollPasteAction.performed += instance.OnRollPasteAction;
                @RollPasteAction.canceled += instance.OnRollPasteAction;
            }
        }
    }
    public RollPasteActions @RollPaste => new RollPasteActions(this);

    // AddItems
    private readonly InputActionMap m_AddItems;
    private IAddItemsActions m_AddItemsActionsCallbackInterface;
    private readonly InputAction m_AddItems_AddItemsAction;
    public struct AddItemsActions
    {
        private @PlayerInput m_Wrapper;
        public AddItemsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @AddItemsAction => m_Wrapper.m_AddItems_AddItemsAction;
        public InputActionMap Get() { return m_Wrapper.m_AddItems; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AddItemsActions set) { return set.Get(); }
        public void SetCallbacks(IAddItemsActions instance)
        {
            if (m_Wrapper.m_AddItemsActionsCallbackInterface != null)
            {
                @AddItemsAction.started -= m_Wrapper.m_AddItemsActionsCallbackInterface.OnAddItemsAction;
                @AddItemsAction.performed -= m_Wrapper.m_AddItemsActionsCallbackInterface.OnAddItemsAction;
                @AddItemsAction.canceled -= m_Wrapper.m_AddItemsActionsCallbackInterface.OnAddItemsAction;
            }
            m_Wrapper.m_AddItemsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @AddItemsAction.started += instance.OnAddItemsAction;
                @AddItemsAction.performed += instance.OnAddItemsAction;
                @AddItemsAction.canceled += instance.OnAddItemsAction;
            }
        }
    }
    public AddItemsActions @AddItems => new AddItemsActions(this);

    // CutPaste
    private readonly InputActionMap m_CutPaste;
    private ICutPasteActions m_CutPasteActionsCallbackInterface;
    private readonly InputAction m_CutPaste_CutPasteAction;
    public struct CutPasteActions
    {
        private @PlayerInput m_Wrapper;
        public CutPasteActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CutPasteAction => m_Wrapper.m_CutPaste_CutPasteAction;
        public InputActionMap Get() { return m_Wrapper.m_CutPaste; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CutPasteActions set) { return set.Get(); }
        public void SetCallbacks(ICutPasteActions instance)
        {
            if (m_Wrapper.m_CutPasteActionsCallbackInterface != null)
            {
                @CutPasteAction.started -= m_Wrapper.m_CutPasteActionsCallbackInterface.OnCutPasteAction;
                @CutPasteAction.performed -= m_Wrapper.m_CutPasteActionsCallbackInterface.OnCutPasteAction;
                @CutPasteAction.canceled -= m_Wrapper.m_CutPasteActionsCallbackInterface.OnCutPasteAction;
            }
            m_Wrapper.m_CutPasteActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CutPasteAction.started += instance.OnCutPasteAction;
                @CutPasteAction.performed += instance.OnCutPasteAction;
                @CutPasteAction.canceled += instance.OnCutPasteAction;
            }
        }
    }
    public CutPasteActions @CutPaste => new CutPasteActions(this);

    // CutPasteV2
    private readonly InputActionMap m_CutPasteV2;
    private ICutPasteV2Actions m_CutPasteV2ActionsCallbackInterface;
    private readonly InputAction m_CutPasteV2_UpAction;
    private readonly InputAction m_CutPasteV2_DownAction;
    private readonly InputAction m_CutPasteV2_RightAction;
    private readonly InputAction m_CutPasteV2_LeftAction;
    public struct CutPasteV2Actions
    {
        private @PlayerInput m_Wrapper;
        public CutPasteV2Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @UpAction => m_Wrapper.m_CutPasteV2_UpAction;
        public InputAction @DownAction => m_Wrapper.m_CutPasteV2_DownAction;
        public InputAction @RightAction => m_Wrapper.m_CutPasteV2_RightAction;
        public InputAction @LeftAction => m_Wrapper.m_CutPasteV2_LeftAction;
        public InputActionMap Get() { return m_Wrapper.m_CutPasteV2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CutPasteV2Actions set) { return set.Get(); }
        public void SetCallbacks(ICutPasteV2Actions instance)
        {
            if (m_Wrapper.m_CutPasteV2ActionsCallbackInterface != null)
            {
                @UpAction.started -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnUpAction;
                @UpAction.performed -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnUpAction;
                @UpAction.canceled -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnUpAction;
                @DownAction.started -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnDownAction;
                @DownAction.performed -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnDownAction;
                @DownAction.canceled -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnDownAction;
                @RightAction.started -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnRightAction;
                @RightAction.performed -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnRightAction;
                @RightAction.canceled -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnRightAction;
                @LeftAction.started -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnLeftAction;
                @LeftAction.performed -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnLeftAction;
                @LeftAction.canceled -= m_Wrapper.m_CutPasteV2ActionsCallbackInterface.OnLeftAction;
            }
            m_Wrapper.m_CutPasteV2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UpAction.started += instance.OnUpAction;
                @UpAction.performed += instance.OnUpAction;
                @UpAction.canceled += instance.OnUpAction;
                @DownAction.started += instance.OnDownAction;
                @DownAction.performed += instance.OnDownAction;
                @DownAction.canceled += instance.OnDownAction;
                @RightAction.started += instance.OnRightAction;
                @RightAction.performed += instance.OnRightAction;
                @RightAction.canceled += instance.OnRightAction;
                @LeftAction.started += instance.OnLeftAction;
                @LeftAction.performed += instance.OnLeftAction;
                @LeftAction.canceled += instance.OnLeftAction;
            }
        }
    }
    public CutPasteV2Actions @CutPasteV2 => new CutPasteV2Actions(this);

    // PoorLiquid
    private readonly InputActionMap m_PoorLiquid;
    private IPoorLiquidActions m_PoorLiquidActionsCallbackInterface;
    private readonly InputAction m_PoorLiquid_PoorLiquidAction;
    public struct PoorLiquidActions
    {
        private @PlayerInput m_Wrapper;
        public PoorLiquidActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PoorLiquidAction => m_Wrapper.m_PoorLiquid_PoorLiquidAction;
        public InputActionMap Get() { return m_Wrapper.m_PoorLiquid; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PoorLiquidActions set) { return set.Get(); }
        public void SetCallbacks(IPoorLiquidActions instance)
        {
            if (m_Wrapper.m_PoorLiquidActionsCallbackInterface != null)
            {
                @PoorLiquidAction.started -= m_Wrapper.m_PoorLiquidActionsCallbackInterface.OnPoorLiquidAction;
                @PoorLiquidAction.performed -= m_Wrapper.m_PoorLiquidActionsCallbackInterface.OnPoorLiquidAction;
                @PoorLiquidAction.canceled -= m_Wrapper.m_PoorLiquidActionsCallbackInterface.OnPoorLiquidAction;
            }
            m_Wrapper.m_PoorLiquidActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PoorLiquidAction.started += instance.OnPoorLiquidAction;
                @PoorLiquidAction.performed += instance.OnPoorLiquidAction;
                @PoorLiquidAction.canceled += instance.OnPoorLiquidAction;
            }
        }
    }
    public PoorLiquidActions @PoorLiquid => new PoorLiquidActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_SpawnTruck;
    public struct DebugActions
    {
        private @PlayerInput m_Wrapper;
        public DebugActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpawnTruck => m_Wrapper.m_Debug_SpawnTruck;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @SpawnTruck.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnSpawnTruck;
                @SpawnTruck.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnSpawnTruck;
                @SpawnTruck.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnSpawnTruck;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SpawnTruck.started += instance.OnSpawnTruck;
                @SpawnTruck.performed += instance.OnSpawnTruck;
                @SpawnTruck.canceled += instance.OnSpawnTruck;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);

    // Workstation
    private readonly InputActionMap m_Workstation;
    private IWorkstationActions m_WorkstationActionsCallbackInterface;
    private readonly InputAction m_Workstation_DisplayRecipe;
    private readonly InputAction m_Workstation_Cook;
    private readonly InputAction m_Workstation_Clear;
    public struct WorkstationActions
    {
        private @PlayerInput m_Wrapper;
        public WorkstationActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @DisplayRecipe => m_Wrapper.m_Workstation_DisplayRecipe;
        public InputAction @Cook => m_Wrapper.m_Workstation_Cook;
        public InputAction @Clear => m_Wrapper.m_Workstation_Clear;
        public InputActionMap Get() { return m_Wrapper.m_Workstation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorkstationActions set) { return set.Get(); }
        public void SetCallbacks(IWorkstationActions instance)
        {
            if (m_Wrapper.m_WorkstationActionsCallbackInterface != null)
            {
                @DisplayRecipe.started -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnDisplayRecipe;
                @DisplayRecipe.performed -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnDisplayRecipe;
                @DisplayRecipe.canceled -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnDisplayRecipe;
                @Cook.started -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnCook;
                @Cook.performed -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnCook;
                @Cook.canceled -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnCook;
                @Clear.started -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnClear;
                @Clear.performed -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnClear;
                @Clear.canceled -= m_Wrapper.m_WorkstationActionsCallbackInterface.OnClear;
            }
            m_Wrapper.m_WorkstationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DisplayRecipe.started += instance.OnDisplayRecipe;
                @DisplayRecipe.performed += instance.OnDisplayRecipe;
                @DisplayRecipe.canceled += instance.OnDisplayRecipe;
                @Cook.started += instance.OnCook;
                @Cook.performed += instance.OnCook;
                @Cook.canceled += instance.OnCook;
                @Clear.started += instance.OnClear;
                @Clear.performed += instance.OnClear;
                @Clear.canceled += instance.OnClear;
            }
        }
    }
    public WorkstationActions @Workstation => new WorkstationActions(this);

    // Audio
    private readonly InputActionMap m_Audio;
    private IAudioActions m_AudioActionsCallbackInterface;
    private readonly InputAction m_Audio_MuteSource;
    public struct AudioActions
    {
        private @PlayerInput m_Wrapper;
        public AudioActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MuteSource => m_Wrapper.m_Audio_MuteSource;
        public InputActionMap Get() { return m_Wrapper.m_Audio; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AudioActions set) { return set.Get(); }
        public void SetCallbacks(IAudioActions instance)
        {
            if (m_Wrapper.m_AudioActionsCallbackInterface != null)
            {
                @MuteSource.started -= m_Wrapper.m_AudioActionsCallbackInterface.OnMuteSource;
                @MuteSource.performed -= m_Wrapper.m_AudioActionsCallbackInterface.OnMuteSource;
                @MuteSource.canceled -= m_Wrapper.m_AudioActionsCallbackInterface.OnMuteSource;
            }
            m_Wrapper.m_AudioActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MuteSource.started += instance.OnMuteSource;
                @MuteSource.performed += instance.OnMuteSource;
                @MuteSource.canceled += instance.OnMuteSource;
            }
        }
    }
    public AudioActions @Audio => new AudioActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private IDialogueActions m_DialogueActionsCallbackInterface;
    private readonly InputAction m_Dialogue_Dialogue1;
    private readonly InputAction m_Dialogue_Dialogue2;
    private readonly InputAction m_Dialogue_Dialogue3;
    public struct DialogueActions
    {
        private @PlayerInput m_Wrapper;
        public DialogueActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dialogue1 => m_Wrapper.m_Dialogue_Dialogue1;
        public InputAction @Dialogue2 => m_Wrapper.m_Dialogue_Dialogue2;
        public InputAction @Dialogue3 => m_Wrapper.m_Dialogue_Dialogue3;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void SetCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterface != null)
            {
                @Dialogue1.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue1;
                @Dialogue1.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue1;
                @Dialogue1.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue1;
                @Dialogue2.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue2;
                @Dialogue2.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue2;
                @Dialogue2.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue2;
                @Dialogue3.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue3;
                @Dialogue3.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue3;
                @Dialogue3.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnDialogue3;
            }
            m_Wrapper.m_DialogueActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Dialogue1.started += instance.OnDialogue1;
                @Dialogue1.performed += instance.OnDialogue1;
                @Dialogue1.canceled += instance.OnDialogue1;
                @Dialogue2.started += instance.OnDialogue2;
                @Dialogue2.performed += instance.OnDialogue2;
                @Dialogue2.canceled += instance.OnDialogue2;
                @Dialogue3.started += instance.OnDialogue3;
                @Dialogue3.performed += instance.OnDialogue3;
                @Dialogue3.canceled += instance.OnDialogue3;
            }
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);

    // RecipeBook
    private readonly InputActionMap m_RecipeBook;
    private IRecipeBookActions m_RecipeBookActionsCallbackInterface;
    private readonly InputAction m_RecipeBook_PreviousPage;
    private readonly InputAction m_RecipeBook_NextPage;
    public struct RecipeBookActions
    {
        private @PlayerInput m_Wrapper;
        public RecipeBookActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PreviousPage => m_Wrapper.m_RecipeBook_PreviousPage;
        public InputAction @NextPage => m_Wrapper.m_RecipeBook_NextPage;
        public InputActionMap Get() { return m_Wrapper.m_RecipeBook; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RecipeBookActions set) { return set.Get(); }
        public void SetCallbacks(IRecipeBookActions instance)
        {
            if (m_Wrapper.m_RecipeBookActionsCallbackInterface != null)
            {
                @PreviousPage.started -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnPreviousPage;
                @PreviousPage.performed -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnPreviousPage;
                @PreviousPage.canceled -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnPreviousPage;
                @NextPage.started -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnNextPage;
                @NextPage.performed -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnNextPage;
                @NextPage.canceled -= m_Wrapper.m_RecipeBookActionsCallbackInterface.OnNextPage;
            }
            m_Wrapper.m_RecipeBookActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PreviousPage.started += instance.OnPreviousPage;
                @PreviousPage.performed += instance.OnPreviousPage;
                @PreviousPage.canceled += instance.OnPreviousPage;
                @NextPage.started += instance.OnNextPage;
                @NextPage.performed += instance.OnNextPage;
                @NextPage.canceled += instance.OnNextPage;
            }
        }
    }
    public RecipeBookActions @RecipeBook => new RecipeBookActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnAllowCameraMovement(InputAction.CallbackContext context);
        void OnDisplayRecipesBook(InputAction.CallbackContext context);
    }
    public interface IPauseActions
    {
        void OnUnpause(InputAction.CallbackContext context);
    }
    public interface IBuildingActions
    {
        void OnQuit(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnDisplayFurnitureStore(InputAction.CallbackContext context);
        void OnSell(InputAction.CallbackContext context);
        void OnEnablePreview(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnQuit(InputAction.CallbackContext context);
        void OnAnyKeyPressed(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
    }
    public interface IAmmountActions
    {
        void OnAddIngredient(InputAction.CallbackContext context);
        void OnRemoveIngredient(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
    }
    public interface ITabsActions
    {
        void OnNextTab(InputAction.CallbackContext context);
        void OnPreviousTab(InputAction.CallbackContext context);
    }
    public interface IAmafoodActions
    {
        void OnChangeList(InputAction.CallbackContext context);
        void OnOrderAndClear(InputAction.CallbackContext context);
    }
    public interface ISpreadPasteActions
    {
        void OnSpreadPasteAction(InputAction.CallbackContext context);
    }
    public interface ISpreadPasteV2Actions
    {
        void OnSpreadPasteFirstAction(InputAction.CallbackContext context);
        void OnSpreadPasteSecondAction(InputAction.CallbackContext context);
    }
    public interface IBurnTopActions
    {
        void OnBurnTopAction(InputAction.CallbackContext context);
    }
    public interface IRollPasteActions
    {
        void OnRollPasteAction(InputAction.CallbackContext context);
    }
    public interface IAddItemsActions
    {
        void OnAddItemsAction(InputAction.CallbackContext context);
    }
    public interface ICutPasteActions
    {
        void OnCutPasteAction(InputAction.CallbackContext context);
    }
    public interface ICutPasteV2Actions
    {
        void OnUpAction(InputAction.CallbackContext context);
        void OnDownAction(InputAction.CallbackContext context);
        void OnRightAction(InputAction.CallbackContext context);
        void OnLeftAction(InputAction.CallbackContext context);
    }
    public interface IPoorLiquidActions
    {
        void OnPoorLiquidAction(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnSpawnTruck(InputAction.CallbackContext context);
    }
    public interface IWorkstationActions
    {
        void OnDisplayRecipe(InputAction.CallbackContext context);
        void OnCook(InputAction.CallbackContext context);
        void OnClear(InputAction.CallbackContext context);
    }
    public interface IAudioActions
    {
        void OnMuteSource(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnDialogue1(InputAction.CallbackContext context);
        void OnDialogue2(InputAction.CallbackContext context);
        void OnDialogue3(InputAction.CallbackContext context);
    }
    public interface IRecipeBookActions
    {
        void OnPreviousPage(InputAction.CallbackContext context);
        void OnNextPage(InputAction.CallbackContext context);
    }
}
